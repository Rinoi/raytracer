/*
** creat_matrice_spe.c for opengl in /home/mayol_l//proj_perso/openGL/matrice
** 
** Made by lucas mayol
** Login   <mayol_l@epitech.net>
** 
** Started on  Mon Apr 29 16:38:51 2013 lucas mayol
** Last update Mon Apr 29 18:51:55 2013 lucas mayol
*/

#include <stdio.h>
#include <stdlib.h>
#include "../include/header.h"

double		*my_gluPerspective(double angle, double ratio, double near, double far)
{
  double	*matrice;
  float		f;

  if ((matrice = malloc(sizeof(double) * 16)) == NULL)
    {
      printf("malloc error\n");
      exit(EXIT_FAILURE);
    }
  f = (1 / tan((angle / 2) * M_PI / 180));

  matrice[0] = f / ratio;
  matrice[1] = 0;
  matrice[2] = 0;
  matrice[3] = 0;

  matrice[4] = 0;
  matrice[5] = f;
  matrice[6] = 0;
  matrice[7] = 0;

  matrice[8] = 0;
  matrice[9] = 0;
  matrice[10] = (near + far) / (near - far);
  matrice[11] = (2 * near * far) / (near - far);

  matrice[12] = 0;
  matrice[13] = 0;
  matrice[14] = -1;
  matrice[15] = 0;

  return (matrice);
}

double		*matrice_translat(double x, double y, double z)
{
  double	*matrice;

  matrice = creat_matrice();

  matrice[3] = x;
  matrice[7] = y;
  matrice[11] = z;
  
  return (matrice);
}

double		*matrice_homo(double x, double y, double z)
{
  double	*matrice;

  matrice = creat_matrice();

  matrice[0] = x;
  matrice[5] = y;
  matrice[10] = z;

  return (matrice);
}

double		*matrice_rot(double angle_x, double angle_y, double angle_z)
{
  double	*matrice;

  matrice = creat_matrice();

  matrice[0] = cos(RAD(angle_y)) + cos(RAD(angle_z));
  matrice[1] = - sin(RAD(angle_z));
  matrice[2] = sin(RAD(angle_y));

  matrice[4] = sin(RAD(angle_z));
  matrice[5] = cos(RAD(angle_x)) + cos(RAD(angle_z));
  matrice[6] = - sin(RAD(angle_x));

  matrice[8] = - sin(RAD(angle_y));
  matrice[9] = sin(RAD(angle_x));
  matrice[10] = cos(RAD(angle_x)) + cos(RAD(angle_y));

  return (matrice);
}
